- import { adminClient } from '@/lib/supabase';
+ import { adminClient } from '../../../lib/supabase';
import { SignJWT } from 'jose';
import crypto from 'node:crypto';
import { cookies } from 'next/headers';
function constantEqual(a,b){ const ab=Buffer.from(a); const bb=Buffer.from(b); if(ab.length!==bb.length) return false; return crypto.timingSafeEqual(ab,bb);} 
function hashPin(pin,saltB64){ const salt=Buffer.from(saltB64,'base64'); const d=crypto.scryptSync(String(pin),salt,64,{N:1<<15,r:8,p:1}); return d.toString('base64'); }
export async function POST(req){ try{ const {code,pin}=await req.json(); if(!code||!pin) return Response.json({error:'code und pin erforderlich'},{status:400}); const supa=adminClient(); const {data,error}=await supa.from('employees').select('id,code,display_name,role,disabled,pin_salt,pin_hash').eq('code',String(code)).maybeSingle(); if(error) throw error; if(!data) return Response.json({error:'Mitarbeiter nicht gefunden'},{status:404}); if(data.disabled) return Response.json({error:'Mitarbeiter deaktiviert'},{status:403}); if(!data.pin_salt||!data.pin_hash) return Response.json({error:'PIN nicht gesetzt'},{status:412}); const got=hashPin(pin,data.pin_salt); if(!constantEqual(got,data.pin_hash)) return Response.json({error:'PIN falsch'},{status:401}); const secret=new TextEncoder().encode(process.env.JWT_SECRET); const token=await new SignJWT({sub:data.id,role:data.role,name:data.display_name,code:data.code}).setProtectedHeader({alg:'HS256'}).setIssuedAt().setExpirationTime('7d').sign(secret); cookies().set({name:'session',value:token,httpOnly:true,sameSite:'lax',secure:true,path:'/',maxAge:60*60*24*7}); return Response.json({ok:true}); }catch(err){ console.error(err); return Response.json({error:'Serverfehler'},{status:500}); }}
